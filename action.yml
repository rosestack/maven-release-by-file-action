# https://github.com/smallrye/smallrye-config/blob/main/.github/workflows/release.yml
# https://github.com/smallrye/smallrye-config/blob/main/.github/workflows/prepare-release.yml

name: Maven Release By File

on:
  workflow_call:

permissions:
  contents: write
  issues: write

env:
  MAVEN_ARGS: -B -U -ntp

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve Project Metadata
        uses: radcortez/project-metadata-action@main
        id: metadata
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          metadata-file-path: '.github/project.yml'

      - name: Set environment variables
        run: |
          echo "CURRENT_VERSION=${{ steps.metadata.outputs.current-version }}" >> $GITHUB_ENV
          echo "NEXT_VERSION=${{ steps.metadata.outputs.next-version }}" >> $GITHUB_ENV

      - name: Validate current version
        if: contains(env.CURRENT_VERSION, 'SNAPSHOT')
        run: |
          echo '::error::Cannot release a SNAPSHOT version.'
          exit 1
          
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }} # macOS: gpg --armor --export-secret-key

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      - name: Set Release version
        run: |
          mvn versions:set -DprocessAllModules=true -DgenerateBackupPoms=false -DnewVersion=${CURRENT_VERSION}
          sed -i "s|<version>[0-9]\+\.[0-9]\+\.[0-9]\+</version>|<version>${CURRENT_VERSION}</version>|g" README.md
          git commit --no-verify -a -m "[CI Skip] Releasing ${CURRENT_VERSION}"

      - name: Publish to Central
        run: mvn -DskipTests -Prelease deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}

      - name: Create Tag
        run: |
          git tag -a "v${CURRENT_VERSION}" -m "Release v${CURRENT_VERSION}"

      - name: Set Next Version
        run: |
          mvn versions:set -DprocessAllModules=true -DgenerateBackupPoms=false -DnewVersion=${NEXT_VERSION}
          git commit --no-verify -a -m "[CI Skip] Next version v${NEXT_VERSION}"

      - name: Push changes
        run: |
          git push origin $(git rev-parse --abbrev-ref HEAD)
          git push --tags

      - name: Create Release
        run: |
          gh release create v${CURRENT_VERSION} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Milestone
        uses: rosestack/milestone-release-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          milestone-title: ${{ steps.metadata.outputs.current-version }}
          milestone-next: ${{ steps.metadata.outputs.next-version }}
