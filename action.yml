name: 'Maven Release by File Action'
description: 'Complete environment configuration for Maven Release by File Action'

branding:
  icon: 'settings'
  color: 'green'

inputs:
  gpg-secret-key:
    description: "GPG secret key"
    required: true
  gpg-passphrase:
    description: "GPG passphrase"
    required: true
  ossrh-username:
    description: "OSSRH username"
    required: true
  ossrh-password:
    description: "OSSRH password"
    required: true
  github-token:
    description: "GitHub token"
    required: true


runs:
  using: 'composite'

  steps:
    - name: Retrieve Project Metadata
      uses: radcortez/project-metadata-action@main
      id: metadata
      with:
        github-token: ${{ inputs.github-token }}
        metadata-file-path: '.github/project.yml'

    - name: Set environment variables
      shell: bash
      run: |
        echo "CURRENT_VERSION=${{ steps.metadata.outputs.current-version }}" >> $GITHUB_ENV
        echo "NEXT_VERSION=${{ steps.metadata.outputs.next-version }}" >> $GITHUB_ENV

    - name: Validate current version
      if: contains(env.CURRENT_VERSION, 'SNAPSHOT')
      shell: bash  
      run: |
        echo '::error::Cannot release a SNAPSHOT version.'
        exit 1
        
    - name: Checkout Source
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-token }}

    - name: Set up Java 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
        server-id: central
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        gpg-private-key: ${{ inputs.gpg-secret-key }} # macOS: gpg --armor --export-secret-key

    - name: Configure Git User
      shell: bash
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@users.noreply.github.com"

    - name: Set Release version
      shell: bash
      run: |
        mvn versions:set -DprocessAllModules=true -DgenerateBackupPoms=false -DnewVersion=${CURRENT_VERSION}
        sed -i "s|<version>[0-9]\+\.[0-9]\+\.[0-9]\+</version>|<version>${CURRENT_VERSION}</version>|g" README.md
        git commit --no-verify -a -m "[CI Skip] Releasing ${CURRENT_VERSION}"

    - name: Publish to Central
      shell: bash
      run: mvn -DskipTests -Prelease deploy
      env:
        MAVEN_USERNAME: ${{ inputs.ossrh-username }}
        MAVEN_PASSWORD: ${{ inputs.ossrh-password }}
        MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg-passphrase }}

    - name: Create Tag
      shell: bash
      run: |
        git tag -a "v${CURRENT_VERSION}" -m "Release v${CURRENT_VERSION}"

    - name: Set Next Version
      shell: bash
      run: |
        mvn versions:set -DprocessAllModules=true -DgenerateBackupPoms=false -DnewVersion=${NEXT_VERSION}
        git commit --no-verify -a -m "[CI Skip] Next version v${NEXT_VERSION}"

    - name: Push changes
      shell: bash
      run: |
        git push origin $(git rev-parse --abbrev-ref HEAD)
        git push --tags

    - name: Create Release
      shell: bash
      run: |
        gh release create v${CURRENT_VERSION} --generate-notes
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: Release Milestone
      uses: rosestack/milestone-release-action@main
      with:
        github-token: ${{ inputs.github-token }}
        milestone-title: ${{ steps.metadata.outputs.current-version }}
        milestone-next: ${{ steps.metadata.outputs.next-version }}
